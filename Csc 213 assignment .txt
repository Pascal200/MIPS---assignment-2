# THIS PROGRAM IS A CONDITIONAL LOOP

.data
buzz_1:.asciiz "\nInput(A):"
buzz_2:.asciiz "\nInput(B):"
buzz_3:.asciiz "\nInput(C):"
buzz_error:.asciiz "\nThis is a complex root"
buzz_ans:.asciiz "\nYour answer is\n"
buzz_and:.asciiz "\nAnd\n"
buzz_question:.asciiz "\nPlease press 1 to continue or any other number to end loop\n"
buzz_goodbye:.asciiz "\nTHE END"
buzz_two: .float 2
buzz_four: .float 4
discriminant_checker:.float 0

.text
Starting_starting:
lwc1 $f1,buzz_two                   #$f1 holds 2.0
lwc1 $f2,buzz_four                  #$f2 holds 4.0
lwc1 $f3,discriminant_checker       #$f3 holds 0.0 to check  discriminant

la $a0,buzz_1                       #To input A
li $v0,4
syscall
li $v0,6
syscall
mov.s $f4,$f0                       #$f4 holds A

la $a0,buzz_2                       #To input B
li $v0,4
syscall
li $v0,6
syscall
mov.s $f5,$f0                       #$f5 holds B

la $a0,buzz_3                       #To input C
li $v0,4
syscall
li $v0,6
syscall
mov.s $f6,$f0                       #$f6 holds C

# to calculate discriminant  ## d = b^2-4*a*c
#And  4=$f2, a=$f4, b=$f5, c=$f6

mul.s $f7,$f5,$f5                  #$f7 = b^2
mul.s $f8,$f2,$f4                  
mul.s $f8,$f8,$f6                  #$f8 = 4*a*c
sub.s $f8,$f7,$f8                  #$f8 = d = b^2-4*a*c#$f9 = d = b^2-4*a*c
mfc1 $t1,$f8                       #Change $f8 to $f1 to check if discriminant < 0

blez $t1,error_label               # to check if the discriminant <= 0 
sqrt.s $f10,$f8                    #$f10 holds the square root of the discriminant

#roots_solver                      #start calculation  ## -b+-sqrtd/2*a
neg.s $f9,$f5                      #here i just changed b to -b. like this $f9=-b
add.s $f23,$f9,$f10                #Here -b+sqrtd
sub.s $f25,$f9,$f10                #Here -b-sqrtd
mul.s $f1,$f1,$f4                  #Here 2*a
div.s $f24,$f23,$f1                # divide -b+sqrtd by 2*a
div.s $f26,$f25,$f1                # divide -b-sqrtd by 2*a
la $a0,buzz_ans
li $v0,4
syscall

mov.s $f12,$f24
li $v0,2
syscall

la $a0,buzz_and
li $v0,4
syscall

mov.s $f12,$f26
li $v0,2
syscall

la $a0,buzz_question
li $v0,4
syscall
li $v0,5
syscall
move $t4,$v0
li $t3,1
beq $t4,$t3,Starting_starting
b exit

error_label:
la $a0,buzz_error
li $v0,4
syscall

la $a0,buzz_question
li $v0,4
syscall
li $v0,5
syscall
move $t4,$v0
li $t3,1
beq $t4,$t3,Starting_starting

b exit
exit:
la $a0,buzz_goodbye
li $v0,4
syscall

li $v0,10
syscall
